#!/usr/bin/env python3
import sys
import argparse
from datetime import datetime


def base_repr(number, base=2, padding=0):  # from numpy
    """
    Return a string representation of a number in the given base system.

    Parameters
    ----------
    number : int
        The value to convert. Positive and negative values are handled.
    base : int, optional
        Convert `number` to the `base` number system. The valid range is 2-62,
        the default value is 2.
    padding : int, optional
        Number of zeros padded on the left. Default is 0 (no padding).

    Returns
    -------
    out : str
        String representation of `number` in `base` system.

    See Also
    --------
    binary_repr : Faster version of `base_repr` for base 2.

    Examples
    --------
    >>> np.base_repr(5)
    '101'
    >>> np.base_repr(6, 5)
    '11'
    >>> np.base_repr(7, base=5, padding=3)
    '00012'

    >>> np.base_repr(10, base=16)
    'A'
    >>> np.base_repr(32, base=16)
    '20'

    """
    digits = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'
    if base > len(digits):
        raise ValueError("Bases greater than 62 not handled in base_repr.")
    elif base < 2:
        raise ValueError("Bases less than 2 not handled in base_repr.")

    num = abs(number)
    res = []
    while num:
        res.append(digits[num % base])
        num //= base
    if padding:
        res.append('0' * padding)
    if number < 0:
        res.append('-')
    return ''.join(reversed(res or '0'))


def date_id(
    now,
    t0=datetime(year=2000, month=1, day=1).astimezone(),
    t1=datetime(year=2050, month=1, day=1).astimezone(),
    base=32,
    length=None,
):
    now = now.astimezone()
    now = t1
    date_repr = base_repr(int((now - t0).total_seconds()), base=base)
    if length is None:
        length = len(date_id(t1, t0, t1, base=base, length=0))
    return '0' * (length - len(date_repr)) + date_repr


def _main():
    p = argparse.ArgumentParser()
    p.add_argument('-b', '--base', default=36, type=int)
    args = p.parse_args()
    print(date_id(datetime.now(), base=args.base))

if __name__ == '__main__':
    _main()
